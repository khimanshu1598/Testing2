name: Deploy Environment

on:
  workflow_dispatch:
    inputs:
      ls6_global_00:
        description: 'LS6 Global - 00'
        type: boolean
        default: false
      ls6_global_01:
        description: 'LS6 Global - 01'
        type: boolean
        default: false
      prod_global_00:
        description: 'Production Global - 00'
        type: boolean
        default: false
      prod_global_01:
        description: 'Production Global - 01'
        type: boolean
        default: false

jobs:
  create-environment-matrix:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - id: set-matrix
        run: |
          # Initialize an empty array for environments
          environments=()

          # Check each input and add selected environments to the array
          if [[ "${{ inputs.ls6_global_00 }}" == "true" ]]; then
            environments+=("LS6 Global - 00")
          fi
          if [[ "${{ inputs.ls6_global_01 }}" == "true" ]]; then
            environments+=("LS6 Global - 01")
          fi
          if [[ "${{ inputs.prod_global_00 }}" == "true" ]]; then
            environments+=("Production Global - 00")
          fi
          if [[ "${{ inputs.prod_global_01 }}" == "true" ]]; then
            environments+=("Production Global - 01")
          fi

          # Convert the environments array to a valid JSON array format
          matrix_json="[\"$(echo ${environments[@]} | sed 's/ /", "/g')\"]"
          echo "matrix=$matrix_json" >> $GITHUB_OUTPUT

  deploy:
    needs: create-environment-matrix
    strategy:
      matrix:
        environment: ${{ fromJson(needs.create-environment-matrix.outputs.matrix) }}
      fail-fast: false
      max-parallel: 1

    runs-on: windows-latest
    environment: ${{ matrix.environment }}

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Debug Matrix Output
        run: |
          echo "Matrix: ${{ needs.create-environment-matrix.outputs.matrix }}"

      - name: Install PowerShell-YAML Module
        shell: pwsh
        run: |
          Install-Module -Name powershell-yaml -Force -Scope CurrentUser

      - name: Execute PowerShell Script
        shell: pwsh
        run: |
          ./fetch-vars.ps1 -environment "${{ matrix.environment }}"
