name: Deploy Environment

on:
  workflow_dispatch:
    inputs:
      ls6_global_00:
        <<: &shared_settings
        description: 'LS6 Global - 00'
      ls6_global_01:
        <<: *shared_settings
        description: 'LS6 Global - 01'
      prod_global_00:
        <<: *shared_settings
        description: 'Production Global - 00'
      prod_global_01:
        <<: *shared_settings
        description: 'Production Global - 01'
      # Add more inputs as needed...

shared_settings: &shared_settings
  type: boolean
  default: false

jobs:
  create-environment-matrix:
    runs-on: windows-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - name: Build Environment Matrix
        id: set-matrix
        shell: pwsh
        run: |
          $environments = @()
          
          $envMap = @{
            "ls6_global_00" = "LS6 Global - 00"
            "ls6_global_01" = "LS6 Global - 01"
            "prod_global_00" = "Production Global - 00"
            "prod_global_01" = "Production Global - 01"
          }
          
          Write-Output "Debug: Inputs passed to the script:"
          foreach ($key in $envMap.Keys) {
              $envVariableName = $key.ToUpper()
              $inputValue = (Get-Item -Path "Env:\$envVariableName").Value
              Write-Output "$($key): $($inputValue)"
              if ($inputValue -eq 'true') {
                  $environments += $envMap[$key]
              }
          }
          
          Write-Output "Debug: Final environments array:"
          Write-Output $environments
          
          $matrixJson = @{ "include" = $environments | ForEach-Object { @{ "environment" = $_ } } } | ConvertTo-Json -Depth 2 -Compress
          Write-Output "Debug: Matrix JSON:"
          Write-Output $matrixJson
          
          Write-Output "matrix=$matrixJson" | Out-File -FilePath $env:GITHUB_OUTPUT -Append

    env:
      ls6_global_00: ${{ inputs.ls6_global_00 }}
      ls6_global_01: ${{ inputs.ls6_global_01 }}
      prod_global_00: ${{ inputs.prod_global_00 }}
      prod_global_01: ${{ inputs.prod_global_01 }}

  deploy:
    needs: create-environment-matrix
    strategy:
      matrix: ${{ fromJson(needs.create-environment-matrix.outputs.matrix) }}
      max-parallel: 1
      fail-fast: false
    runs-on: windows-latest
    environment: ${{ matrix.environment }}

    steps:
      - uses: actions/checkout@v3

      - name: Install PowerShell-YAML Module
        shell: pwsh
        run: Install-Module -Name powershell-yaml -Force -Scope CurrentUser

      - name: Execute PowerShell Script
        shell: pwsh
        run: ./fetch-vars.ps1 -environment "${{ matrix.environment }}"
