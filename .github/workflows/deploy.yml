name: Deploy Environment
on:
  workflow_dispatch:
    inputs:
      environments:
        description: 'Select environments to deploy'
        type: choice
        multiple: true
        options:
          - "LS6 Global - 00"
          - "LS6 Global - 01"
          - "Production Global - 00"
          - "Production Global - 01"
        required: true

jobs:
  deploy:
    strategy:
      matrix:
        environment: ${{ fromJson(inputs.environments) }}
      max-parallel: 1
      fail-fast: false
    
    runs-on: windows-latest
    environment: ${{ matrix.environment }}

    steps:
      - uses: actions/checkout@v3

      - name: Install PowerShell-YAML Module
        shell: pwsh
        run: |
          Install-Module -Name powershell-yaml -Force -Scope CurrentUser

      - name: Consolidate Environment Variables
        id: consolidate_vars
        shell: pwsh
        run: |
          $environment = "${{ matrix.environment }}"
          $yamlPath = "library-variables.yml"
          $outputPath = "consolidated-variables.yml"
          
          Install-Module -Name powershell-yaml -Force -Scope CurrentUser
          Import-Module powershell-yaml
          
          $yamlContent = Get-Content -Raw -Path $yamlPath
          $librarySets = $yamlContent | ConvertFrom-Yaml

          $consolidated = @{}

          foreach ($set in $librarySets.library_sets.GetEnumerator()) {
            $varName = $set.Key
            if ($set.Value.environments -ne $null) {
              foreach ($env in $set.Value.environments.GetEnumerator()) {
                if ($env.Key -eq $environment) {
                  $consolidated[$varName] = @{ value = $env.Value.value }
                }
              }
            }
            if ($set.Value -is [System.Collections.Hashtable] -and $set.Value.ContainsKey("value")) {
              $consolidated[$varName] = @{ value = $set.Value.value }
            }
          }

          $consolidated | ConvertTo-Yaml | Set-Content -Path $outputPath

      - name: Execute PowerShell Script
        shell: pwsh
        run: |
          Install-Module -Name powershell-yaml -Force -Scope CurrentUser
          Import-Module powershell-yaml
          ./fetch-vars.ps1 -environment "${{ matrix.environment }}"
